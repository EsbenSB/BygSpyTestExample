@using System
@using System.Collections.Generic
@using System.Linq
@using System.Threading.Tasks
@using System.Net.Http
@using System.Net.Http.Json
@using BygSpy.Models
@using System.Text.Json
@inject IHttpClientFactory ClientFactory
@page "/newUser"
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h2 class="card-title text-center mb-4">Create User</h2>
                    <!-- Your form for creating a new user goes here -->
                    <form>
                        <div class="form-group">
                            <label for="name">Name:</label>
                            <input type="text" id="name" class="form-control" value="@nameValue" />
                        </div>
                        <div class="form-group">
                            <label for="email">Email:</label>
                            <input type="email" id="email" class="form-control" value="@emailValue" />
                        </div>
                        <div class="form-group">
                            <label for="password">Password:</label>
                            <input type="password" id="password" class="form-control" value="@passwordValue" />
                        </div>
                        <div class="form-group">
                            <label for="phoneNumber">Phone number:</label>
                            <input type="phoneNumber" id="phoneNumber" class="form-control" value="@phoneNumberValue" />
                        </div>
                        <button type="submit" class="btn btn-primary btn-block" @onclick="CreateUser">Create User</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@code {

    private string nameValue { get; set; }
    private string emailValue { get; set; }
    private string passwordValue { get; set; }
    private string phoneNumberValue { get; set; }

    [Inject]
    protected HttpClient Http { get; set; }

    protected User user = new User();

    protected override async void OnInitialized()
    {
        await GetUsers();
    }

    protected async Task CreateUser()
    {
        // user.Id = Guid.NewGuid();
        user.Name = nameValue;
        user.Email = emailValue;
        user.Password = passwordValue;
        user.PhoneNumber = phoneNumberValue;


        var request = new HttpRequestMessage(HttpMethod.Post,
        "https://localhost:7299/api/users");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);
    }   

    protected async Task GetUsers()
    {
        var request = new HttpRequestMessage(HttpMethod.Get,
            "https://localhost:7299/api/users");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);
        var res = await response.Content.ReadAsStreamAsync();

        var result = await JsonSerializer.DeserializeAsync
                <List<User>>(res);

    }
}
