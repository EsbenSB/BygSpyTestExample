@using System
@using System.Collections.Generic
@using System.Linq
@using System.Threading.Tasks
@using System.Net.Http
@using System.Net.Http.Json
@using BygSpy.Models
@using System.Text.Json
@using System.Text
@inject IHttpClientFactory ClientFactory
@page "/newUser"
<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h2 class="card-title text-center mb-4">Create User</h2>
                    <!-- Your form for creating a new user goes here -->
                    <form>
                        <div class="form-group">
                            <label for="name">Name:</label>
                            <input type="text" id="name" class="form-control" @bind="nameValue" />
                        </div>
                        <div class="form-group">
                            <label for="email">Email:</label>
                            <input type="email" id="email" class="form-control" @bind="emailValue" />
                        </div>
                        <div class="form-group">
                            <label for="password">Password:</label>
                            <input type="password" id="password" class="form-control" @bind="passwordValue" />
                        </div>
                        <div class="form-group">
                            <label for="phoneNumber">Phone number:</label>
                            <input type="phoneNumber" id="phoneNumber" class="form-control" @bind="phoneNumberValue" />
                        </div>

                            <button type="submit" class="btn btn-primary btn-block" @onclick="CreateUser">Create User</button>
                        
                        
             

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>


@code {

    private string nameValue { get; set; }
    private string emailValue { get; set; }
    private string passwordValue { get; set; }
    private string phoneNumberValue { get; set; }

    [Inject]
    protected HttpClient Http { get; set; }

    protected User user = new User();

    protected override async void OnInitialized()
    {
        // await GetUsers();
        // await CreateUser();
    }


    public async Task CreateUser()
    {
        try
        {
            var user = new User
                {
                    Name = nameValue,
                    Email = emailValue,
                    Password = passwordValue,
                    PhoneNumber = phoneNumberValue
                };

            var client = ClientFactory.CreateClient();
            var json = JsonSerializer.Serialize(user); // Serialize the User object to JSON

            var content = new StringContent(json, Encoding.UTF8, "application/json");

            var response = await client.PostAsync("https://localhost:7299/api/users", content);

        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }   

    protected async Task<List<User>> GetUsers()
    {
        try
        {
            var client = ClientFactory.CreateClient();
            var response = await client.GetAsync("https://localhost:7299/api/users");

            if (response.IsSuccessStatusCode)
            {
                var json = await response.Content.ReadAsStringAsync();
                var users = JsonSerializer.Deserialize<List<User>>(json, new JsonSerializerOptions
                    {
                        PropertyNameCaseInsensitive = true 
                    });

                return users;
            }
            else
            {
                Console.WriteLine($"Failed to retrieve users. Status code: {response.StatusCode}");
                return new List<User>(); 
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
            return new List<User>(); 
        }
    }
}
