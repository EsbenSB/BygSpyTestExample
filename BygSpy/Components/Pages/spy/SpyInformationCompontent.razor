@page "/SpyInformationCompontent"
@using BygSpy.Models;
@using System.Net.Http
@using System.Text.Json
@using System.Text
@inject HttpClient HttpClient
@inject NavigationManager NavManager
@inject IHttpClientFactory ClientFactory

<div class="container mt-5">
    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-header">
                    Object Information
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-12">
                            <h5 class="card-title">@spyObject.newobjectName </h5>
                            <p class="card-text">Adress: @spyObject.Street - @spyObject.City</p>
                            <p class="card-text">Status: @spyObject.Status</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string? spyObjectId;
    public SpyingObject spyObject = new SpyingObject();

    protected override async Task OnInitializedAsync()
    {
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        var parameterName = "spyObjectId";

        if (Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query).TryGetValue(parameterName, out var value))
        {
            spyObjectId = value;
            await GetSpyObject();
        }
    }

    protected async Task GetSpyObject()
    {
        try
        {
            var client = ClientFactory.CreateClient();
            var response = await client.GetAsync($"https://localhost:7299/api/spyingobject/{spyObjectId}");

            if (response.IsSuccessStatusCode)
            {
                var json = await response.Content.ReadAsStringAsync();
                var spyobj = JsonSerializer.Deserialize<SpyingObject>(json, new JsonSerializerOptions
                    {
                        PropertyNameCaseInsensitive = true
                    });
                spyObject = spyobj;
            }
            else
            {
                Console.WriteLine($"Failed to retrieve spies. Status code: {response.StatusCode}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }

}